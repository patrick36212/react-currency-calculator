{"version":3,"sources":["App/Container/styled.js","App/Container/index.js","App/Form/useRates.js","App/Form/Field/styled.js","App/Form/Field/index.js","App/Form/styled.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/Footer/styled.js","App/Form/Footer/index.js","App/Form/Clock/styled.js","App/Form/Clock/useLocalCurrentDate.js","App/Form/Clock/index.js","App/Form/Info/styled.js","App/Form/Info/index.js","App/Form/Info/Loading/styled.js","App/Form/Info/Loading/index.js","App/Form/Info/Failed/styled.js","App/Form/Info/Failed/index.js","App/Form/index.js","App/App.js","reportWebVitals.js","currency-background.png","GlobalStyle.js","index.js","theme.js"],"names":["StyledContainer","styled","main","theme","breakpoint","maxWidth","mobileMax","Container","children","useRatesData","useState","state","ratesData","setRatesData","useEffect","setTimeout","a","axios","get","response","data","rates","date","StyledLabel","label","StyledLabelText","span","StyledFormField","input","color","white","gray","pink","black","Select","fieldName","name","value","onChange","as","Object","keys","map","currency","Input","min","type","step","required","placeholder","StyledFieldset","fieldset","StyledHeader","h1","blue","StyledAnnotatnion","p","red","css","StyledWrapper","div","button","result","StyledButton","StyledResult","Result","className","sourceAmount","toFixed","ownedCurrency","targetResult","targetCurrency","StyledFooter","footer","Footer","year","StyledClock","formatDate","toLocaleString","weekday","hour","minute","second","day","month","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","StyledInfo","error","Info","textInfo","loading","failed","additionalInfo","LoadingBar","Dot","Loading","StyledIcon","Failed","Form","amount","setAmount","setResult","setOwnedCurrency","setTargetCurrency","document","title","onSubmit","event","ownedRate","targetRate","preventDefault","calculateResult","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","background","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8570f82.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    width: 100%;\r\n    max-width: ${({ theme }) => theme.breakpoint.maxWidth}px;\r\n    padding: 8px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin: auto;\r\n    }\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    const getRates = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://api.exchangerate.host/latest\");\r\n\r\n        const { rates, date } = await response.data;\r\n\r\n        setRatesData({\r\n          state: \"success\",\r\n          rates,\r\n          date\r\n        });\r\n      } catch {\r\n        setRatesData({\r\n          state: \"error\",\r\n        });\r\n      }\r\n    };\r\n    setTimeout(getRates, 1000);\r\n  }, []);\r\n\r\n  return ratesData;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLabel = styled.label`\r\n    margin-bottom: 15px;\r\n    display: grid;\r\n    grid-template-rows: repeat(2, 1fr);\r\n    gap: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledLabelText = styled.span`\r\n    font-weight: bold;\r\n    padding: 10px;\r\n    max-width: 350px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const StyledFormField = styled.input`\r\n    text-align: center;\r\n    padding: 10px;\r\n    border-radius: 30px;\r\n    border: none;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 20px 20px 60px ${({ theme }) => theme.color.gray};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 100%;\r\n    }\r\n\r\n    &:required {\r\n        border: 1px solid ${({ theme }) => theme.color.pink};\r\n        background: ${({ theme }) => theme.color.pink};\r\n    }\r\n    &:required:hover {\r\n        border: 1px solid ${({ theme }) => theme.color.black};\r\n    }\r\n`;","import { useRatesData } from \"../useRates\";\r\nimport { StyledFormField, StyledLabel, StyledLabelText } from \"./styled\";\r\n\r\nexport const Select = ({ fieldName, name, value, onChange }) => {\r\n\r\n    const ratesData = useRatesData();\r\n\r\n    return (\r\n        <StyledLabel>\r\n            <StyledLabelText>{fieldName}</StyledLabelText>\r\n            <StyledFormField\r\n                as=\"select\"\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                {!!ratesData.rates && Object.keys(ratesData.rates).map((currency) => (\r\n                    <option\r\n                        key={currency}\r\n                        value={currency}\r\n                    >\r\n                        {currency}\r\n                    </option>\r\n                ))}\r\n            </StyledFormField>\r\n        </StyledLabel>\r\n    );\r\n};\r\n\r\nexport const Input = ({ fieldName, value, onChange }) => {\r\n    return (\r\n        <StyledLabel>\r\n            <StyledLabelText>{fieldName}</StyledLabelText>\r\n            <StyledFormField\r\n                min=\"0.01\"\r\n                value={value}\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                required\r\n                placeholder=\"Write your amount\"\r\n            >\r\n            </StyledFormField>\r\n        </StyledLabel>\r\n    );\r\n\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledFieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n    background: ${({ theme }) => theme.color.white};\r\n    border: none;\r\n`;\r\n\r\nexport const StyledHeader = styled.h1`\r\n    color: ${({ theme }) => theme.color.blue};\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\nexport const StyledAnnotatnion = styled.p`\r\n    text-align: right;\r\n    padding: 5px;\r\n    color: ${({ theme }) => theme.color.red};\r\n\r\n    ${({ date }) => date && css`\r\n        color: ${({ theme }) => theme.color.black};\r\n    `}\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\ndisplay: grid;\r\ngrid-auto-flow: column;\r\ngrid-gap: 10px;\r\nmargin: 10px 0;\r\n\r\n    ${({ button }) => button && css`\r\n        justify-items: end;\r\n    `}\r\n\r\n    ${({ result }) => result && css`\r\n        max-width: fit-content;\r\n        margin: 5px auto;\r\n    `}\r\n\r\n@media(max-width: 767px) {\r\n    grid-auto-flow: row;\r\n}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\npadding: 10px;\r\nmax-width: 163px;\r\nwidth: 100%;\r\ncolor: ${({ theme }) => theme.color.blue};\r\nbackground: transparent;\r\ncursor: pointer;\r\ntransition: ease-out 0.5s;\r\nborder-radius: 30px;\r\nborder: 2px solid ${({ theme }) => theme.color.blue};\r\n\r\n@media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n    &:hover {\r\n    color: ${({ theme }) => theme.color.white};\r\n    box-shadow: inset 0-100px 0 0 ${({ theme }) => theme.color.blue};\r\n}\r\n\r\n    &:active {\r\n    transform: scale(0.9);\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n    margin: 0;\r\n    color: hsl(0, 0%, 100%);\r\n    padding: 10px;\r\n    font-size: 20px;\r\n    background: ${({ theme }) => theme.color.blue};\r\n    border-radius: 30px;\r\n    box-shadow: 20px 20px 60px ${({ theme }) => theme.color.gray};\r\n`;","import { StyledResult } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n\r\n    !!result && (\r\n        <StyledResult className=\"result__text\">\r\n            {result.sourceAmount.toFixed(2)}&nbsp;{result.ownedCurrency}&nbsp;={\" \"}\r\n            <strong>\r\n                {result.targetResult.toFixed(2)}&nbsp;{result.targetCurrency}\r\n            </strong>\r\n        </StyledResult>\r\n    )\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    padding: 5px;\r\n    text-align: center;\r\n`;","import { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = ({ name, year }) => (\r\n    <StyledFooter className=\"footer\">\r\n        <p>{`Coded by`} {name} &copy; {year}</p>\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    padding: 5px;\r\n    font-weight: bold;\r\n    margin: 0;\r\n    text-align: right;\r\n`;","import { useState, useEffect } from \"react\";\r\n\r\nexport const formatDate = (date) =>\r\n    date.toLocaleString(\"en-GB\", {\r\n        weekday: \"long\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n        day: \"numeric\",\r\n        month: \"short\",\r\n        year: \"numeric\",\r\n    });\r\n\r\nexport const useCurrentDate = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import { StyledClock } from \"./styled\";\r\nimport { formatDate, useCurrentDate } from \"./useLocalCurrentDate\";\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <StyledClock>\r\n            {formatDate(date)}\r\n        </StyledClock>\r\n    );\r\n};\r\n\r\nexport default Clock;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-items: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    border-radius: 30px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const StyledInfo = styled.p`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    word-spacing: 3px;\r\n    line-height: 1.5;\r\n\r\n    ${({error}) => error && css`\r\n        color: ${({theme}) => theme.color.red};\r\n    `}\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoint.mobileMax}px){\r\n        word-spacing: normal;\r\n        margin: 0.5em;\r\n    }\r\n`;","import { StyledContainer, StyledInfo } from \"./styled\";\r\n\r\nconst Info = ({ textInfo, loading, error, failed, additionalInfo }) => {\r\n    return (\r\n        <StyledContainer>\r\n            <StyledInfo error={error}>\r\n                {textInfo}\r\n                <br />\r\n                {additionalInfo}\r\n            </StyledInfo>\r\n            {loading}\r\n            {failed}\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Info;","import styled from \"styled-components\";\r\n\r\nexport const LoadingBar = styled.div`\r\n    width: 3.5em;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    @keyframes fade {\r\n    from {\r\n        opacity: 1;\r\n        }\r\n    to {\r\n        opacity: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n    width: 0.8em;\r\n    height: 0.8em;\r\n    border-radius: 50%;\r\n    background-color: ${({theme}) => theme.color.red};\r\n    animation: fade 0.8s ease-in-out alternate infinite;\r\n\r\n    &:nth-of-type(1) {\r\n        animation-delay: -0.4s;\r\n    }\r\n\r\n    &:nth-of-type(2) {\r\n        animation-delay: -0.2s;\r\n    }\r\n`;","import { LoadingBar, Dot } from \"./styled\";\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <LoadingBar >\r\n            <Dot />\r\n            <Dot />\r\n            <Dot />\r\n        </LoadingBar>\r\n    )\r\n};\r\n\r\nexport default Loading;","import styled from \"styled-components\";\r\n\r\nexport const StyledIcon = styled.span`\r\n    font-size: 50px;\r\n    color: ${({ theme }) => theme.color.red};\r\n`;","import { StyledIcon } from \"./styled\";\r\n\r\n\r\nconst Failed = () => {\r\n    return (\r\n        <StyledIcon className=\"material-icons\">\r\n            report_problem\r\n        </StyledIcon>\r\n    )\r\n}\r\n\r\nexport default Failed;","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Select, Input } from \"./Field\";\r\nimport { StyledAnnotatnion, StyledHeader, StyledWrapper, StyledButton, StyledFieldset } from \"./styled\";\r\n\r\nimport Result from \"./Result\";\r\nimport Footer from \"./Footer\";\r\nimport Clock from \"./Clock\";\r\nimport { useRatesData } from \"./useRates\";\r\nimport Info from \"./Info\";\r\nimport Loading from \"./Info/Loading\";\r\nimport Failed from \"./Info/Failed\";\r\n\r\n\r\nconst Form = () => {\r\n\r\n    const ratesData = useRatesData();\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [result, setResult] = useState();\r\n    const [ownedCurrency, setOwnedCurrency] = useState(\"EUR\");\r\n    const [targetCurrency, setTargetCurrency] = useState(\"USD\");\r\n\r\n    useEffect(() => {\r\n        document.title = `Calculate from ${ownedCurrency} to ${targetCurrency}`;\r\n    }, [ownedCurrency, targetCurrency]);\r\n\r\n    const calculateResult = (amount) => {\r\n        const ownedRate = ratesData.rates[ownedCurrency];\r\n        const targetRate = ratesData.rates[targetCurrency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetResult: amount * (ownedRate / targetRate),\r\n            ownedCurrency,\r\n            targetCurrency,\r\n        });\r\n    };\r\n\r\n    const onFormSubmit = (event, ownedRate, targetRate) => {\r\n        event.preventDefault();\r\n        calculateResult(amount, ownedRate, targetRate);\r\n        setAmount(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            <StyledFieldset>\r\n                <Clock />\r\n                <StyledHeader>Currency calculator</StyledHeader>\r\n                {ratesData.state === \"loading\" && (<Info textInfo={\"Loadnig current exchange rates from European Central Bank.\"} loading={<Loading />} />)}\r\n                {ratesData.state === \"error\" && (<Info textInfo={`Sorry, something went wrong. Check you Internet connection. If it's ok, the error in on our side.`} additionalInfo={`You may refresh the page or try again later.`} error failed={<Failed />} />)}\r\n                {ratesData.state === \"success\" && (\r\n                    <>\r\n                        <StyledAnnotatnion>*Fields required</StyledAnnotatnion>\r\n                        <StyledWrapper>\r\n                            <Select\r\n                                fieldName={\"From*: \"}\r\n                                name={\"currency\"}\r\n                                value={ownedCurrency}\r\n                                onChange={({ target }) => setOwnedCurrency(target.value)}\r\n                            />\r\n                            <Select\r\n                                fieldName={\"To*: \"}\r\n                                name={\"currency\"}\r\n                                value={targetCurrency}\r\n                                onChange={({ target }) => setTargetCurrency(target.value)}\r\n                            />\r\n                            <Input\r\n                                fieldName={`${ownedCurrency} Amount*: `}\r\n                                value={amount}\r\n                                onChange={({ target }) => setAmount(target.value)}\r\n                            />\r\n                        </StyledWrapper>\r\n                        <StyledWrapper button>\r\n                            <StyledButton>Calculate</StyledButton>\r\n                        </StyledWrapper>\r\n                        <StyledWrapper result>\r\n                            <Result result={result} />\r\n                        </StyledWrapper>\r\n                    </>)}\r\n                <StyledAnnotatnion date >\r\n                    Exchange rates valid as of: {ratesData.date}\r\n                </StyledAnnotatnion>\r\n                <Footer name=\"Patryk Krawczyk\" year=\"2021\" />\r\n            </StyledFieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import Container from './Container';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Container>\r\n      <Form />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/currency-background.9aad8888.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./currency-background.png\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n        *, ::after, ::before {\r\n            box-sizing: inherit;\r\n        }\r\n\r\n        #root {\r\n            background: url(\"${background}\");\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n            box-sizing: border-box; \r\n            min-height: 100vh;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n\r\n        body {\r\n            font-family: 'Lato', sans-serif;\r\n            -webkit-font-smoothing: antialiased;\r\n            -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n    <GlobalStyle />\r\n    <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        gray: \"#6A6262\",\r\n        white: \"#fff\",\r\n        red: \"#FE4A49\",\r\n        blue: \"#0353A4\",\r\n        pink: \"#E5B4BB\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n        maxWidth: 1024,\r\n    },\r\n};"],"sourceRoot":""}