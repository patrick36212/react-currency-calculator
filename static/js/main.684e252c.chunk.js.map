{"version":3,"sources":["Container/index.js","currencies.js","Result/index.js","Footer/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","currencies","EUR","CHF","USD","GBP","Result","result","undefined","sourceAmount","toFixed","targetResult","currency","Footer","name","year","Form","useState","amount","setAmount","short","setCurrency","setResult","calculateResult","rate","find","value","onSubmit","event","preventDefault","onChange","target","type","step","required","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAQeA,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMC,UAAU,YAAhB,SACKD,K,OCJIE,G,MAAa,CACtB,CAAEC,IAAK,QACP,CAAEC,IAAK,QACP,CAAEC,IAAK,QACP,CAAEC,IAAK,UCWIC,G,MAbA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,mBAAGP,UAAU,SAAb,cACgBQ,IAAXD,GACG,qCACKA,EAAOE,aAAaC,QAAQ,GADjC,eACqD,IACjD,mCACKH,EAAOI,aAAaD,QAAQ,GADjC,OAC2CH,EAAOK,mBCAnDC,G,MANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,wBAAQf,UAAU,SAAlB,SACI,oBAAGA,UAAU,oBAAb,sBAA2Cc,EAA3C,SAAyDC,SCsFlDC,EApFF,WAET,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAShB,EAAW,GAAGmB,OAAvD,mBAAOR,EAAP,KAAiBS,EAAjB,KAEA,EAA4BJ,qBAA5B,mBAAOV,EAAP,KAAee,EAAf,KAEMC,EAAkB,SAACL,EAAQN,GAE7B,IAAMY,EAAOvB,EAAWwB,MAAK,qBAAGL,QAAsBR,KAAUc,MAEhEJ,EAAU,CACNb,cAAeS,EACfP,aAAcO,EAASM,EACvBZ,cAUR,OACI,sBAAMZ,UAAU,OAAO2B,SAPN,SAACC,GAClBA,EAAMC,iBACNN,EAAgBL,EAAQN,GACxBO,EAAU,KAIV,SACI,2BAAUnB,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,iCACA,mBAAGA,UAAU,mBAAb,qCACA,wBAAOA,UAAU,cAAjB,UACI,sBAAMA,UAAU,kBAAhB,2BACA,uBACI0B,MAAOR,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAUY,EAAOL,QAC3C1B,UAAU,cACVgC,KAAK,SACLC,KAAK,OACLC,UAAQ,OAGhB,wBAAOlC,UAAU,cAAjB,UACI,sBAAMA,UAAU,kBAAhB,kCACA,wBACIA,UAAU,cACVc,KAAK,WACLY,MAAOd,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBV,EAAYU,EAAOL,QAJjD,SAMKzB,EAAWkC,KAAI,SAACvB,GAAD,OACZ,wBAEIc,MAAOd,EAASQ,MAFpB,SAIKR,EAASQ,OAHLR,EAASQ,eAkB9B,qBAAKpB,UAAU,wBAAf,SACI,wBACIA,UAAU,eADd,qBAMJ,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAQuB,gBAAiBA,EAAiBhB,OAAQA,MAEtD,cAAC,EAAD,CAAQO,KAAK,kBAAkBC,KAAK,eCxErCqB,MATf,WAEE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.684e252c.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","export const currencies = [\r\n    { EUR: 4.4278 },\r\n    { CHF: 4.2525 },\r\n    { USD: 3.9012 },\r\n    { GBP: 5.3782 },\r\n];","import \"./style.css\"\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"result\">\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;={\" \"}\r\n                <strong>\r\n                    {result.targetResult.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import \"./style.css\"\r\n\r\nconst Footer = ({ name, year }) => (\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__paragraph\">Coded by {name} &copy; {year}</p>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import \"./style.css\"\r\nimport { currencies } from \"../currencies\";\r\nimport Result from \"../Result\";\r\nimport Footer from \"../Footer\";\r\nimport { useState } from \"react\";\r\n\r\nconst Form = () => {\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    // const [rate, setRate] = useState(currencies.find(({ short }) => short === currency).value);\r\n    const [result, setResult] = useState();\r\n\r\n    const calculateResult = (amount, currency) => {\r\n\r\n        const rate = currencies.find(({ short }) => short === currency).value\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetResult: amount / rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(amount, currency);\r\n        setAmount(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Currency calculator</legend>\r\n                <p className=\"form__adnotation\">Required fields mark *.</p>\r\n                <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">PLN Amount*: </span>\r\n                    <input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        className=\"form__field\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">Exchange currency*: </span>\r\n                    <select\r\n                        className=\"form__field\"\r\n                        name=\"currency\"\r\n                        value={currency}\r\n                        onChange={({ target }) => setCurrency(target.value)}\r\n                    >\r\n                        {currencies.map((currency) => (\r\n                            <option\r\n                                key={currency.short}\r\n                                value={currency.short}\r\n                            >\r\n                                {currency.short}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                {/* <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">Exchange currency rate: </span>\r\n                    <input\r\n                        value={rate}\r\n                        onChange={({ target }) => setRate(target.value)}\r\n                        className=\"form__field\"\r\n                        type=\"number\"\r\n                        readOnly\r\n                    />\r\n                </label> */}\r\n                <div className=\"form__buttonContainer\">\r\n                    <button\r\n                        className=\"form__button\"\r\n                    >\r\n                        Count\r\n                    </button>\r\n                </div>\r\n                <div className=\"result\">\r\n                    <Result calculateResult={calculateResult} result={result} />\r\n                </div>\r\n                <Footer name=\"Patryk Krawczyk\" year=\"2021\" />\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import Container from './Container';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Container>\r\n      <Form />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}